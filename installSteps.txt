For intstalling on linux (WSL/bash on Windows, edit windows files through /mnt/c)

# WINDOWS
==========
choco upgrade -y neovim --pre
choco upgrade -y llvm git cmake fd ripgrep fzf

# FZF
=====
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install


# FD
====
cd; mkdir deb; cd deb;
curl -LO https://github.com/sharkdp/fd/releases/download/v8.2.1/fd_8.2.1_amd64.deb
sudo dpkg -i fd_8.2.1_amd64.deb

# RIPGREP
=========
cd; mkdir deb; cd deb;
curl -LO https://github.com/BurntSushi/ripgrep/releases/download/12.1.1/ripgrep_12.1.1_amd64.deb
sudo dpkg -i ripgrep_12.1.1_amd64.deb

# VIM FILES
===========
cd; git clone https://github.com/loshjawrence/vim.git
cp vim/.bash* .; cp vim/.vimrc .; cp vim/.gitconfig .;
mkdir .config/nvim; cp vim/*init.vim .config/nvim;
mkdir .vim; cp -r vim/vimfiles/colors .vim/

# PYTHON MODULES REQS
=====================
// see: https://neovim.io/doc/user/provider.html
// see https://linuxize.com/post/how-to-install-pip-on-ubuntu-20.04/
sudo apt update -y
sudo apt install -y python-dev python-pip python3-dev python3-pip
python2 -m pip install --user --upgrade pip pynvim
python3 -m pip install --user --upgrade pip pynvim

# PERL MODULES REQS
===================
sudo apt update -y
sudo apt install -y perl cpanminus
sudo cpanm -n Neovim::Ext

# INSTALL NEOVIM:
================
//https://github.com/neovim/neovim/wiki/Building-Neovim#build-prerequisites
//https://github.com/neovim/neovim/wiki/Installing-Neovim#install-from-source
//https://github.com/neovim/neovim/wiki/Building-Neovim
sudo apt update -y
sudo apt install -y ninja-build gettext libtool libtool-bin autoconf automake cmake g++ pkg-config unzip
cd; mkdir clones; cd clones; git clone https://github.com/neovim/neovim.git; cd neovim
git tag
git checkout tags/desired_version_number -b tagName-branch
(or just use master for latest)
rm -rf build
make CMAKE_BUILD_TYPE=Release
sudo make install
git branch -D tagName-branch


# UNINSTALL NEOVIM:
===================
sudo rm /usr/local/bin/nvim
sudo rm -r /usr/local/share/nvim/

# VIM-PLUG
==========
curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

# Universal Ctags
=================
// https://github.com/universal-ctags/ctags/blob/master/docs/autotools.rst
// DOCS ON HOW TO USE/CONFIG: https://buildmedia.readthedocs.org/media/pdf/ctags/latest/ctags.pdf
cd; mkdir clones; cd clones; git clone https://github.com/universal-ctags/ctags.git
cd ctags
./autogen.sh
./configure
make
sudo make install
ctags --version

# language servers
==================
most can be installed with :LspInstall <ls name>
clangd:
linux: `sudo apt update -y; sudo apt install -y clangd`
pip3 install cmake-language-server
pip3 install python-language-server
npm install -g bash-language-server
npm install -g vim-language-server
npm install -g typescript-language-server
npm install -g vscode-json-languageserver

https://github.com/sumneko/lua-language-server/wiki/Build-and-Run-(Standalone)
cd; cd clones; git clone https://github.com/sumneko/lua-language-server;
cd lua-language-server
git submodule update --init --recursive
cd 3rd/luamake
ninja -f ninja/linux.ninja
cd ../..
./3rd/luamake/luamake rebuild
./bin/Linux/lua-language-server -E ./main.lua

https://github.com/svenstaro/glsl-language-server
cd; cd clones; git clone git@github.com:svenstaro/glsl-language-server.git
cd glsl-language-server
git submodule update --init
cmake -Bbuild -GNinja
ninja -Cbuild

# Clangd
========
// https://clangd.llvm.org/installation.html
// NOTE: if on ubuntu 20.04, clangd package is version 10
// for nvim lsp use clang 9
sudo apt update -y
sudo apt install -y clangd-9 clang-9
sudo apt remove -y clangd-10 clang-10
sudo update-alternatives --install /usr/bin/clangd clangd /usr/bin/clangd-9 100
sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-9 100

# NVM
=====
// https://github.com/nvm-sh/nvm#installing-and-updating
// dont worry about it saying some lines exists already in your bashrc
sudo apt install curl
curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
source ~/.profile
nvm install node
node --version

# WSL
=====
upgrade ubuntu in place: https://alessio.franceschelli.me/posts/windows/wsl2-upgrade/

go to microsoft store. hit winkey and search store
download the latest LTS ubuntu and windows terminal
update windows 10 to version 2004 or higher
upgrade to WSL 2
go to settings location and make ubuntu default. hide azure and cmd.
/mnt/c/Users/loshj/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json



Open nvim and do a :PlugInstall
